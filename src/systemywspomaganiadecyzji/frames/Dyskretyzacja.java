/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systemywspomaganiadecyzji.frames;

import Data.Data;
import Data.DataOperation;
import java.awt.GridLayout;
import java.awt.Window;
import java.util.ArrayList;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author KonradD
 */
public class Dyskretyzacja extends javax.swing.JFrame {

    /**
     * Creates new form Dyskretyzacja
     */
    boolean changeValueInExistingColumn = false;
    private Window mainFrame;

    JCheckBox[] columns;
    private JPanel columnPanel = new JPanel();

    public Dyskretyzacja() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        fillComboBox();
    }

    public Dyskretyzacja(Window frame) {
        mainFrame = frame;
        columnPanel.setLayout(new GridLayout(0, 1));
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        fillComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane(columnPanel);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("wybierz kolumnę:");

        jLabel2.setText("podaj liczbę przedziałów:");

        jCheckBox2.setText("zamień wartości w istniejącej kolumnie");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox2)
                            .addComponent(jButton1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        changeValueInExistingColumn = !changeValueInExistingColumn;
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DataOperation dop = new DataOperation();
        int numberofRange;
        try {
            System.out.println(jTextField2.getText());
            numberofRange = Integer.parseInt(jTextField2.getText());
        } catch (Exception e) {
            System.out.println("Int, nie double, nie string.");
            e.printStackTrace();
            return;
        }
        /*String[] res = dop.dyskretyzacja(Data.getInstance().getColumn(jComboBox1.getSelectedIndex()), numberofRange);
        if (changeValueInExistingColumn) {
            Data.getInstance().setColumn(res, jComboBox1.getSelectedIndex());            
        } else {
            if (Data.getInstance().getHeaders().isEmpty()) {
                for (int i = 1; i <= Data.getInstance().getMaxWidth(); i++) {
                    Data.getInstance().addHeader(i + "");
                }
            }else{
                Data.getInstance().addHeader(Data.getInstance().getHeader(jComboBox1.getSelectedIndex()) + " dyskretyzacja");
            }
            Data.getInstance().addColumn(res);
        }*/
        for (int i = 0; i < columns.length; i++) {
            if (columns[i].isSelected()) {
                String[] res = dop.dyskretyzacja(Data.getInstance().getColumn(i), numberofRange);
                if (changeValueInExistingColumn) {
                    Data.getInstance().setColumn(res, i);
                } else {
                    if (Data.getInstance().getHeaders().isEmpty()) {
                        for (int j = 1; j <= Data.getInstance().getMaxWidth(); j++) {
                            Data.getInstance().addHeader(j + "");
                        }
                    } else {
                        Data.getInstance().addHeader(Data.getInstance().getHeader(i) + " dyskretyzacja");
                    }
                    Data.getInstance().addColumn(res);
                }
            }
        }
        mainFrame.dispose();
        this.dispose();
        new systemywspomaganiadecyzji.Window().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dyskretyzacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dyskretyzacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dyskretyzacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dyskretyzacja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dyskretyzacja().setVisible(true);
            }
        });
    }

    private void fillComboBox() {
        ArrayList<String> headers = Data.getInstance().getHeaders();
        //jComboBox1.removeAllItems();
        if (headers.isEmpty()) {
            //System.out.println("PUSTO");
            int lp = Data.getInstance().getMaxWidth();
            columns = new JCheckBox[lp];
            for (int i = 1; i <= lp; i++) {
                //jComboBox1.addItem(i + " ");
                columns[i] = new JCheckBox((i + 1) + " ");
                columns[i].setSelected(true);
                columnPanel.add(columns[i]);
            }
        } else {
            //for (String s : headers) {
            columns = new JCheckBox[headers.size()];
            for (int i = 0; i < headers.size(); i++) {
                //jComboBox1.addItem(headers.get(i));
                columns[i] = new JCheckBox(headers.get(i));
                columns[i].setSelected(true);
                columnPanel.add(columns[i]);
            }
        }
        columnPanel.revalidate();
        columnPanel.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
